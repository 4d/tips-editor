{"version":3,"sources":["store/interfaces.store.ts","store/actions.store.ts","store/constants.store.ts","store/reducer.store.ts","store/provider.store.tsx","components/dumb/breadcrumb.dumb.tsx","components/code.component.tsx","components/detail.component.tsx","components/file-upload.component.tsx","components/list.component.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["EItemType","EActionType","saveItem","item","index","type","SAVE_ITEM","payload","setCurrentItem","SET_CURRENT_ITEM","setFilter","SET_FILTER","TIPS_STORAGE_KEY","items","JSON","parse","localStorage","getItem","e","Array","isArray","initialState","filter","current","appReducer","state","action","SET_ITEMS","REMOVE_ITEM","remove","length","map","i","Store","createContext","displayName","useStore","useContext","StoreProvider","children","useReducer","globalState","dispatch","useEffect","setItem","stringify","Provider","value","Arrow","active","props","className","BreadcrumbComponent","path","onClick","split","useState","activeIndex","setActiveIndex","Breadcrumb","separator","slice","join","Item","renderItem","onMouseEnter","onMouseLeave","Code","showCode","setShowCode","Button","body","key","TEXT","Icon","icon","appearance","IconButton","style","padding","borderRadius","marginBottom","border","src","theme","Detail","close","data","setData","fetch","then","res","json","Drawer","show","onHide","Header","Title","Body","Form","FormGroup","ControlLabel","InputPicker","groupBy","onChange","setValue","Footer","styles","width","height","FileUpload","file","setFile","Uploader","draggable","multiple","fileList","autoUpload","fileListVisible","files","a","blobFile","text","result","Alert","error","accept","IconComponent","Whisper","preventOverflow","placement","trigger","speaker","top","left","Popover","title","VIDEO","video","provider","link","allow","allowFullScreen","options","overrides","component","target","rel","RemoveModal","onConfirm","isRemove","Modal","color","ItemsList","setIndex","removeItem","href","List","hover","startsWith","FlexboxGrid","colspan","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.97491730.chunk.js","sourcesContent":["export enum EItemType {\n  TEXT = 'text',\n  VIDEO = 'video',\n}\n\nexport interface IItem {\n  key: string;\n  body: string;\n  type: EItemType;\n}\n\nexport interface IVideoItem extends IItem {\n  type: EItemType.VIDEO;\n  video: {\n    provider: string;\n    link: string;\n  };\n  title: string;\n}\n\nexport interface ITextItem extends IItem {\n  type: EItemType.TEXT;\n}\n\nexport type TItem = IVideoItem | ITextItem;\n\nexport interface IAppState {\n  items: TItem[];\n  current: number;\n  filter: string;\n}\n\nexport enum EActionType {\n  SET_CURRENT_ITEM = 'Edit item',\n  REMOVE_ITEM = 'Remove item',\n  SAVE_ITEM = 'SAVE item',\n  SET_ITEMS = 'Set Items',\n  SET_FILTER = 'Set filter',\n}\n\nexport interface TSetCurrentItemAction {\n  type: EActionType.SET_CURRENT_ITEM;\n  payload: number;\n}\n\nexport interface TRemoveItemAction {\n  type: EActionType.REMOVE_ITEM;\n  payload: number;\n}\n\nexport interface TSaveItemAction {\n  type: EActionType.SAVE_ITEM;\n  payload: {\n    item: TItem;\n    index: number;\n  };\n}\n\nexport interface TSetItemsAction {\n  type: EActionType.SET_ITEMS;\n  payload: TItem[];\n}\n\nexport interface TSetFilterAction {\n  type: EActionType.SET_FILTER;\n  payload: string;\n}\n\nexport type TAction =\n  | TSetCurrentItemAction\n  | TRemoveItemAction\n  | TSaveItemAction\n  | TSetFilterAction\n  | TSetItemsAction;\n","import {\n  EActionType,\n  TItem,\n  TSetItemsAction,\n  TRemoveItemAction,\n  TSaveItemAction,\n  TSetCurrentItemAction,\n  TSetFilterAction,\n} from './interfaces.store';\n\nexport function setItems(payload: TItem[]): TSetItemsAction {\n  return {\n    type: EActionType.SET_ITEMS,\n    payload,\n  };\n}\n\nexport function removeItem(index: number): TRemoveItemAction {\n  return {\n    type: EActionType.REMOVE_ITEM,\n    payload: index,\n  };\n}\n\nexport function saveItem(\n  item: TItem,\n  index: number,\n): TSaveItemAction {\n  return {\n    type: EActionType.SAVE_ITEM,\n    payload: { item, index },\n  };\n}\n\nexport function setCurrentItem(\n  payload: number,\n): TSetCurrentItemAction {\n  return {\n    type: EActionType.SET_CURRENT_ITEM,\n    payload,\n  };\n}\n\nexport function setFilter(payload: string): TSetFilterAction {\n  return {\n    type: EActionType.SET_FILTER,\n    payload,\n  };\n}\n","import { IAppState, TItem } from './interfaces.store';\n\nexport const TIPS_STORAGE_KEY = '__TIPS__';\n\nlet items: TItem[] = [];\n\ntry {\n  items = JSON.parse(\n    localStorage.getItem(TIPS_STORAGE_KEY) || '[]',\n  ) as TItem[];\n} catch (e) {\n  items = [];\n}\n\nif (!Array.isArray(items)) {\n  items = [];\n}\n\nexport const initialState: IAppState = {\n  filter: '',\n  items,\n  current: -1,\n};\n","import { remove } from 'lodash';\nimport { Reducer } from 'react';\nimport { initialState } from './constants.store';\nimport { EActionType, IAppState, TAction } from './interfaces.store';\n\nexport const appReducer: Reducer<IAppState, TAction> = (\n  state: IAppState = initialState,\n  action: TAction,\n): IAppState => {\n  switch (action.type) {\n    case EActionType.SET_FILTER:\n      return {\n        ...state,\n        filter: action.payload,\n      };\n    case EActionType.SET_ITEMS:\n      return {\n        ...state,\n        items: action.payload,\n      };\n    case EActionType.REMOVE_ITEM:\n      return {\n        ...state,\n        items: remove(\n          state.items,\n          (item, index) => index !== action.payload,\n        ),\n      };\n    case EActionType.SAVE_ITEM: {\n      const { index, item } = action.payload;\n\n      if (index >= state.items.length) {\n        return {\n          ...state,\n          items: [...state.items, item],\n        };\n      }\n\n      return {\n        ...state,\n        items: state.items.map((current, i) =>\n          index === i ? item : current,\n        ),\n      };\n    }\n    case EActionType.SET_CURRENT_ITEM:\n      return {\n        ...state,\n        current: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","import {\n  createContext,\n  useContext,\n  useReducer,\n  FC,\n  Dispatch,\n  useEffect,\n} from 'react';\nimport { initialState, TIPS_STORAGE_KEY } from './constants.store';\nimport { IAppState, TAction } from './interfaces.store';\nimport { appReducer } from './reducer.store';\n\nconst Store = createContext<[IAppState, Dispatch<TAction>]>([\n  initialState,\n  () => {},\n]);\n\nStore.displayName = 'Store';\n\nexport const useStore = () => useContext(Store);\n\nexport const StoreProvider: FC = ({ children }) => {\n  const [globalState, dispatch] = useReducer(\n    appReducer,\n    initialState,\n  );\n\n  useEffect(() => {\n    localStorage.setItem(\n      TIPS_STORAGE_KEY,\n      JSON.stringify(globalState.items),\n    );\n  }, [globalState.items]);\n\n  return (\n    <Store.Provider value={[globalState, dispatch]}>\n      {children}\n    </Store.Provider>\n  );\n};\n","import { FC, useState } from 'react';\nimport { Breadcrumb } from 'rsuite';\nimport './breadcrumb.style.css';\n\ninterface ArrowProps\n  extends React.DetailedHTMLProps<\n    React.HTMLAttributes<HTMLDivElement>,\n    HTMLDivElement\n  > {\n  active: boolean;\n}\n\nconst Arrow: FC<ArrowProps> = ({ children, active, ...props }) => {\n  return (\n    <div className={`rs-item ${active ? 'active' : ''}`} {...props}>\n      {children}\n    </div>\n  );\n};\n\ninterface BreadcrumbComponentProps {\n  path: string;\n  className?: string;\n  onClick?: (ev: { value: string; index: number }) => void;\n}\n\nconst BreadcrumbComponent: FC<BreadcrumbComponentProps> = ({\n  path = '',\n  onClick,\n  className = '',\n}) => {\n  const items = path.split(':');\n  const [activeIndex, setActiveIndex] = useState<number>(-1);\n\n  return (\n    <Breadcrumb\n      separator=\"\"\n      className={`${className} font-medium whitespace-nowrap`}\n    >\n      {items.map((item, index) => {\n        const current = items.slice(0, index + 1).join(':');\n        return (\n          <Breadcrumb.Item\n            key={current}\n            renderItem={() => (\n              <Arrow\n                onMouseEnter={() => setActiveIndex(index)}\n                onMouseLeave={() => setActiveIndex(-1)}\n                active={activeIndex >= index}\n                onClick={() => {\n                  if (onClick) {\n                    onClick({\n                      value: current,\n                      index,\n                    });\n                  }\n                }}\n              >\n                {item}\n              </Arrow>\n            )}\n          />\n        );\n      })}\n    </Breadcrumb>\n  );\n};\n\nexport default BreadcrumbComponent;\n","import { FC, useState } from 'react';\nimport ReactJson from 'react-json-view';\nimport { Button, Icon, IconButton } from 'rsuite';\nimport {\n  saveItem,\n  setCurrentItem,\n  setFilter,\n} from '~/store/actions.store';\nimport { EItemType } from '~/store/interfaces.store';\nimport { useStore } from '~/store/provider.store';\nimport BreadcrumbComponent from './dumb/breadcrumb.dumb';\n\nconst Code: FC = () => {\n  const [{ items, filter }, dispatch] = useStore();\n  const [showCode, setShowCode] = useState<boolean>(false);\n\n  return (\n    <>\n      <div className=\"w-full flex justify-between flex-row my-3\">\n        <div className=\"flex justify-center align-middle\">\n          <Button\n            className=\"mr-4\"\n            onClick={() => {\n              dispatch(\n                saveItem(\n                  {\n                    body: '',\n                    key: '',\n                    type: EItemType.TEXT,\n                  },\n                  items.length,\n                ),\n              );\n\n              dispatch(setCurrentItem(items.length));\n            }}\n          >\n            <Icon icon=\"plus\"></Icon>\n          </Button>\n          {filter ? (\n            <>\n              <BreadcrumbComponent\n                path={filter}\n                onClick={({ value }) => dispatch(setFilter(value))}\n              />\n              <Button\n                appearance=\"link\"\n                onClick={() => dispatch(setFilter(''))}\n              >\n                Clear\n              </Button>\n            </>\n          ) : null}\n        </div>\n        <div className=\"block\">\n          <IconButton\n            appearance={showCode ? 'primary' : 'default'}\n            onClick={() => setShowCode(!showCode)}\n            icon={<Icon icon=\"code\" />}\n          />\n        </div>\n      </div>\n      {showCode ? (\n        <ReactJson\n          style={{\n            padding: 10,\n            borderRadius: 6,\n            marginBottom: 12,\n            border: '1px dashed gray',\n          }}\n          src={items}\n          theme=\"solarized\"\n        />\n      ) : null}\n    </>\n  );\n};\n\nexport default Code;\n","import { FC, useEffect, useState } from 'react';\nimport {\n  Button,\n  ControlLabel,\n  Drawer,\n  Form,\n  FormGroup,\n  InputPicker,\n} from 'rsuite';\nimport { saveItem, setCurrentItem } from '~/store/actions.store';\nimport { useStore } from '~/store/provider.store';\n\nconst Detail: FC = () => {\n  const close = () => dispatch(setCurrentItem(-1));\n\n  const [{ current, items }, dispatch] = useStore();\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    fetch('keys.json')\n      .then((res) => res.json())\n      .then((data) => setData(data));\n  }, []);\n\n  if (current < 0) {\n    return null;\n  }\n\n  const setValue = (key: string, value: any) =>\n    dispatch(\n      saveItem(\n        {\n          ...items[current],\n          [key]: value,\n        },\n        current,\n      ),\n    );\n\n  return (\n    <Drawer show={current >= 0} onHide={close}>\n      <Drawer.Header>\n        <Drawer.Title>Item Detail</Drawer.Title>\n      </Drawer.Header>\n      <Drawer.Body>\n        <Form>\n          <FormGroup>\n            <ControlLabel>Key</ControlLabel>\n            <InputPicker\n              data={data}\n              groupBy=\"group\"\n              value={items[current].key}\n              onChange={(value) => setValue('key', value)}\n            ></InputPicker>\n          </FormGroup>\n        </Form>\n      </Drawer.Body>\n      <Drawer.Footer>\n        <Button onClick={close} appearance=\"primary\">\n          Save\n        </Button>\n        <Button onClick={close} appearance=\"subtle\">\n          Cancel\n        </Button>\n      </Drawer.Footer>\n    </Drawer>\n  );\n};\n\nexport default Detail;\n","import { FC, useState } from 'react';\nimport { Alert, Uploader } from 'rsuite';\nimport { FileType } from 'rsuite/lib/Uploader';\nimport { setItems } from '~/store/actions.store';\nimport { useStore } from '~/store/provider.store';\n\nconst styles = {\n  width: '100%',\n  height: '100%',\n};\n\nconst FileUpload: FC = () => {\n  const [file, setFile] = useState<FileType | null>(null);\n  const [, dispatch] = useStore();\n\n  return (\n    <Uploader\n      className=\"w-full mb-3\"\n      draggable\n      multiple={false}\n      fileList={file ? [file] : []}\n      autoUpload={false}\n      fileListVisible={false}\n      onChange={async (files) => {\n        if (files.length === 0) {\n          return;\n        }\n\n        const result = (await files[0].blobFile?.text()) || '[]';\n\n        try {\n          const json = JSON.parse(result);\n          dispatch(setItems(json));\n        } catch (e) {\n          Alert.error('Invalid JSON.');\n          return;\n        }\n\n        setFile(null);\n      }}\n      accept=\"application/json\"\n    >\n      <div style={styles}>Click or Drag files to this area</div>\n    </Uploader>\n  );\n};\n\nexport default FileUpload;\n","import Markdown from 'markdown-to-jsx';\nimport { FC, useState } from 'react';\nimport {\n  Button,\n  FlexboxGrid,\n  Icon,\n  List,\n  Modal,\n  Popover,\n  Whisper,\n} from 'rsuite';\nimport {\n  removeItem,\n  setCurrentItem,\n  setFilter,\n} from '~/store/actions.store';\nimport { EItemType, IItem, TItem } from '~/store/interfaces.store';\nimport { useStore } from '~/store/provider.store';\nimport BreadcrumbComponent from './dumb/breadcrumb.dumb';\n\nconst IconComponent: FC<{ item: TItem }> = ({ item }) => {\n  return (\n    <Whisper\n      preventOverflow\n      placement=\"auto\"\n      trigger=\"click\"\n      speaker={({ top, left, ...props }) => {\n        return (\n          <Popover\n            title={(item as any).title || ''}\n            style={{ top, left }}\n            {...props}\n          >\n            <article className=\"prose text-left prose-sm overflow-auto p-1 max-h-80 text-sm\">\n              {item.type === EItemType.VIDEO &&\n              item.video.provider === 'youtube' &&\n              item.video.link ? (\n                <iframe\n                  height={200}\n                  width={'100%'}\n                  src={item.video.link}\n                  title={item.title}\n                  allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                  allowFullScreen\n                ></iframe>\n              ) : null}\n              <Markdown\n                options={{\n                  overrides: {\n                    a: {\n                      component: ({ children, ...props }) => {\n                        return (\n                          <a\n                            {...props}\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                            className=\"flex items-center\"\n                          >\n                            {children}\n                            <Icon\n                              icon=\"external-link\"\n                              className=\"ml-1\"\n                            />\n                          </a>\n                        );\n                      },\n                    },\n                  },\n                }}\n              >\n                {item.body}\n              </Markdown>\n            </article>\n          </Popover>\n        );\n      }}\n    >\n      <Icon\n        icon={item.type === EItemType.VIDEO ? 'film' : 'code'}\n        className=\"text-gray-300 text-base cursor-pointer\"\n      />\n    </Whisper>\n  );\n};\n\nconst RemoveModal: FC<{\n  item?: IItem;\n  show: boolean;\n  onConfirm?: (isRemove: boolean) => void;\n}> = ({ show, onConfirm, item }) => {\n  if (!item) {\n    return null;\n  }\n\n  function onHide(isRemove: boolean) {\n    if (onConfirm) {\n      onConfirm(isRemove);\n    }\n  }\n\n  return (\n    <Modal show={show} onHide={() => onHide(false)}>\n      <Modal.Header>\n        <Modal.Title>Confirm</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        Are you sure you want to remove the key:\n        <span className=\"bg-gray-500 text-xs p-1 rounded-md mx-1\">\n          {item.key}\n        </span>{' '}\n        of type:\n        <span className=\"bg-gray-500 p-1 text-xs rounded-md mx-1\">\n          {item.type}\n        </span>\n        ?\n      </Modal.Body>\n      <Modal.Footer>\n        <Button\n          onClick={() => onHide(true)}\n          appearance=\"primary\"\n          color=\"red\"\n        >\n          Remove\n        </Button>\n        <Button onClick={() => onHide(false)} appearance=\"subtle\">\n          Cancel\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nconst ItemsList: FC = () => {\n  const [{ items, filter }, dispatch] = useStore();\n  const [index, setIndex] = useState<number>(-1);\n\n  return (\n    <>\n      <RemoveModal\n        item={items[index]}\n        show={!!items[index]}\n        onConfirm={(isRemove) => {\n          if (isRemove) {\n            dispatch(removeItem(index));\n          }\n\n          setIndex(-1);\n        }}\n      ></RemoveModal>\n      {items.length === 0 ? (\n        <div className=\"text-center bg-[#292d33] border-dashed rounded-md border border-gray-200 p-3\">\n          The list is empty. Please upload a valid{' '}\n          <span className=\"bg-gray-500 p-1 text-xs rounded-md mx-1\">\n            JSON file\n          </span>{' '}\n          or use{' '}\n          <a href=\"tips.json\" target=\"_blank\">\n            this example\n          </a>\n        </div>\n      ) : null}\n      <List hover>\n        {items.map((item, index) => {\n          if (filter && !item.key.startsWith(filter)) {\n            return null;\n          }\n\n          return (\n            <List.Item key={`${item.key}:${index}`} index={index}>\n              <FlexboxGrid>\n                {/*icon*/}\n                <FlexboxGrid.Item\n                  colspan={2}\n                  className=\"flex justify-center items-center h-16\"\n                >\n                  <IconComponent item={item} />\n                </FlexboxGrid.Item>\n                {/*base info*/}\n                <FlexboxGrid.Item\n                  colspan={19}\n                  className=\"flex flex-col justify-center items-start h-16\"\n                >\n                  <BreadcrumbComponent\n                    path={item.key}\n                    onClick={({ value }) =>\n                      dispatch(setFilter(value))\n                    }\n                  />\n                </FlexboxGrid.Item>\n                <FlexboxGrid.Item\n                  colspan={2}\n                  className=\"flex justify-center items-center h-16\"\n                >\n                  <Button\n                    color=\"orange\"\n                    appearance=\"link\"\n                    onClick={() => setIndex(index)}\n                  >\n                    Remove\n                  </Button>\n                  <span className=\"p-1\">|</span>\n                  <Button\n                    appearance=\"link\"\n                    onClick={() => dispatch(setCurrentItem(index))}\n                  >\n                    Edit\n                  </Button>\n                </FlexboxGrid.Item>\n              </FlexboxGrid>\n            </List.Item>\n          );\n        })}\n      </List>\n    </>\n  );\n};\n\nexport default ItemsList;\n","import { FC } from 'react';\nimport Code from '~/components/code.component';\nimport Detail from '~/components/detail.component';\nimport FileUpload from '~/components/file-upload.component';\nimport List from '~/components/list.component';\nimport { StoreProvider } from '~/store/provider.store';\n\nconst App: FC = () => {\n  return (\n    <StoreProvider>\n      <div className=\"max-w-7xl m-auto mt-4\">\n        <FileUpload></FileUpload>\n        <Code></Code>\n        <List></List>\n        <Detail></Detail>\n      </div>\n    </StoreProvider>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}