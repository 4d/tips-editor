{"version":3,"sources":["store/interfaces.store.ts","store/actions.store.ts","store/constants.store.ts","store/reducer.store.ts","store/provider.store.tsx","components/dialogs/confirm.dialog.tsx","components/dumb/breadcrumb.dumb.tsx","components/code.component.tsx","components/detail.component.tsx","components/file-upload.component.tsx","components/dialogs/confirm-remove.dialog.tsx","components/list.component.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["EItemType","EActionType","setItems","payload","type","SET_ITEMS","saveItem","item","index","SAVE_ITEM","setCurrentItem","SET_CURRENT_ITEM","setFilter","SET_FILTER","TIPS_STORAGE_KEY","TIPS_URL","initialState","filter","items","current","appReducer","state","action","REMOVE_ITEM","remove","length","map","i","Store","createContext","displayName","useStore","useContext","StoreProvider","children","useReducer","globalState","dispatch","useEffect","localStorage","setItem","JSON","stringify","Provider","value","ConfirmDialog","show","onYes","title","yesLabel","noLabel","yesProps","noProps","onHide","isYes","Modal","Header","Title","Body","Footer","Button","appearance","onClick","Arrow","active","props","className","BreadcrumbComponent","path","split","useState","activeIndex","setActiveIndex","Breadcrumb","separator","slice","join","Item","renderItem","onMouseEnter","onMouseLeave","Code","showCode","setShowCode","showRefresh","setShowRefresh","getItem","parse","e","refresh","fetch","then","res","json","color","target","href","rel","Icon","icon","body","key","TEXT","IconButton","style","padding","borderRadius","marginBottom","border","src","theme","Detail","close","data","setData","Drawer","Form","FormGroup","ControlLabel","InputPicker","groupBy","onChange","setValue","styles","width","height","FileUpload","file","setFile","Uploader","draggable","multiple","fileList","autoUpload","fileListVisible","files","a","blobFile","text","result","Alert","error","accept","RemoveModal","onConfirm","IconComponent","Whisper","preventOverflow","placement","trigger","speaker","top","left","Popover","VIDEO","video","provider","link","allow","allowFullScreen","options","overrides","component","ItemsList","setIndex","isRemove","removeItem","List","hover","startsWith","FlexboxGrid","colspan","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f594cafd.chunk.js","sourcesContent":["export enum EItemType {\n  TEXT = 'text',\n  VIDEO = 'video',\n}\n\nexport interface IItem {\n  key: string;\n  body: string;\n  type: EItemType;\n}\n\nexport interface IVideoItem extends IItem {\n  type: EItemType.VIDEO;\n  video: {\n    provider: string;\n    link: string;\n  };\n  title: string;\n}\n\nexport interface ITextItem extends IItem {\n  type: EItemType.TEXT;\n}\n\nexport type TItem = IVideoItem | ITextItem;\n\nexport interface IAppState {\n  items: TItem[];\n  current: number;\n  filter: string;\n}\n\nexport enum EActionType {\n  SET_CURRENT_ITEM = 'Edit item',\n  REMOVE_ITEM = 'Remove item',\n  SAVE_ITEM = 'SAVE item',\n  SET_ITEMS = 'Set Items',\n  SET_FILTER = 'Set filter',\n}\n\nexport interface TSetCurrentItemAction {\n  type: EActionType.SET_CURRENT_ITEM;\n  payload: number;\n}\n\nexport interface TRemoveItemAction {\n  type: EActionType.REMOVE_ITEM;\n  payload: number;\n}\n\nexport interface TSaveItemAction {\n  type: EActionType.SAVE_ITEM;\n  payload: {\n    item: TItem;\n    index: number;\n  };\n}\n\nexport interface TSetItemsAction {\n  type: EActionType.SET_ITEMS;\n  payload: TItem[];\n}\n\nexport interface TSetFilterAction {\n  type: EActionType.SET_FILTER;\n  payload: string;\n}\n\nexport type TAction =\n  | TSetCurrentItemAction\n  | TRemoveItemAction\n  | TSaveItemAction\n  | TSetFilterAction\n  | TSetItemsAction;\n","import {\n  EActionType,\n  TItem,\n  TSetItemsAction,\n  TRemoveItemAction,\n  TSaveItemAction,\n  TSetCurrentItemAction,\n  TSetFilterAction,\n} from './interfaces.store';\n\nexport function setItems(payload: TItem[]): TSetItemsAction {\n  return {\n    type: EActionType.SET_ITEMS,\n    payload,\n  };\n}\n\nexport function removeItem(index: number): TRemoveItemAction {\n  return {\n    type: EActionType.REMOVE_ITEM,\n    payload: index,\n  };\n}\n\nexport function saveItem(\n  item: TItem,\n  index: number,\n): TSaveItemAction {\n  return {\n    type: EActionType.SAVE_ITEM,\n    payload: { item, index },\n  };\n}\n\nexport function setCurrentItem(\n  payload: number,\n): TSetCurrentItemAction {\n  return {\n    type: EActionType.SET_CURRENT_ITEM,\n    payload,\n  };\n}\n\nexport function setFilter(payload: string): TSetFilterAction {\n  return {\n    type: EActionType.SET_FILTER,\n    payload,\n  };\n}\n","import { IAppState } from './interfaces.store';\n\nexport const TIPS_STORAGE_KEY = '__TIPS__';\nexport const TIPS_URL =\n  'https://raw.githubusercontent.com/midrissi/Web-studio-TIPS/main/tips.json';\n\nexport const initialState: IAppState = {\n  filter: '',\n  items: [],\n  current: -1,\n};\n","import { remove } from 'lodash';\nimport { Reducer } from 'react';\nimport { initialState } from './constants.store';\nimport { EActionType, IAppState, TAction } from './interfaces.store';\n\nexport const appReducer: Reducer<IAppState, TAction> = (\n  state: IAppState = initialState,\n  action: TAction,\n): IAppState => {\n  switch (action.type) {\n    case EActionType.SET_FILTER:\n      return {\n        ...state,\n        filter: action.payload,\n      };\n    case EActionType.SET_ITEMS:\n      return {\n        ...state,\n        items: action.payload,\n      };\n    case EActionType.REMOVE_ITEM:\n      return {\n        ...state,\n        items: remove(\n          state.items,\n          (item, index) => index !== action.payload,\n        ),\n      };\n    case EActionType.SAVE_ITEM: {\n      const { index, item } = action.payload;\n\n      if (index >= state.items.length) {\n        return {\n          ...state,\n          items: [...state.items, item],\n        };\n      }\n\n      return {\n        ...state,\n        items: state.items.map((current, i) =>\n          index === i ? item : current,\n        ),\n      };\n    }\n    case EActionType.SET_CURRENT_ITEM:\n      return {\n        ...state,\n        current: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","import {\n  createContext,\n  useContext,\n  useReducer,\n  FC,\n  Dispatch,\n  useEffect,\n} from 'react';\nimport { initialState, TIPS_STORAGE_KEY } from './constants.store';\nimport { IAppState, TAction } from './interfaces.store';\nimport { appReducer } from './reducer.store';\n\nconst Store = createContext<[IAppState, Dispatch<TAction>]>([\n  initialState,\n  () => {},\n]);\n\nStore.displayName = 'Store';\n\nexport const useStore = () => useContext(Store);\n\nexport const StoreProvider: FC = ({ children }) => {\n  const [globalState, dispatch] = useReducer(\n    appReducer,\n    initialState,\n  );\n\n  useEffect(() => {\n    localStorage.setItem(\n      TIPS_STORAGE_KEY,\n      JSON.stringify(globalState.items),\n    );\n  }, [globalState.items]);\n\n  return (\n    <Store.Provider value={[globalState, dispatch]}>\n      {children}\n    </Store.Provider>\n  );\n};\n","import { FC } from 'react';\nimport { Button, ButtonProps, Modal } from 'rsuite';\n\nconst ConfirmDialog: FC<\n  Partial<{\n    show: boolean;\n    title: string;\n    yesLabel: string;\n    noLabel: string;\n    yesProps: ButtonProps;\n    noProps: ButtonProps;\n    onYes: (isYes: boolean) => void;\n  }>\n> = ({\n  show,\n  onYes,\n  title = 'Confirm',\n  children,\n  yesLabel = 'Yes',\n  noLabel = 'No',\n  yesProps = {},\n  noProps = {},\n}) => {\n  function onHide(isYes: boolean) {\n    if (onYes) {\n      onYes(isYes);\n    }\n  }\n\n  return (\n    <Modal show={show} onHide={() => onHide(false)}>\n      <Modal.Header>\n        <Modal.Title>{title}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>{children}</Modal.Body>\n      <Modal.Footer>\n        <Button\n          appearance=\"primary\"\n          {...yesProps}\n          onClick={() => onHide(true)}\n        >\n          {yesLabel}\n        </Button>\n        <Button\n          appearance=\"subtle\"\n          {...noProps}\n          onClick={() => onHide(false)}\n        >\n          {noLabel}\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default ConfirmDialog;\n","import { FC, useState } from 'react';\nimport { Breadcrumb } from 'rsuite';\nimport './breadcrumb.style.css';\n\ninterface ArrowProps\n  extends React.DetailedHTMLProps<\n    React.HTMLAttributes<HTMLDivElement>,\n    HTMLDivElement\n  > {\n  active: boolean;\n}\n\nconst Arrow: FC<ArrowProps> = ({ children, active, ...props }) => {\n  return (\n    <div className={`rs-item ${active ? 'active' : ''}`} {...props}>\n      {children}\n    </div>\n  );\n};\n\ninterface BreadcrumbComponentProps {\n  path: string;\n  className?: string;\n  onClick?: (ev: { value: string; index: number }) => void;\n}\n\nconst BreadcrumbComponent: FC<BreadcrumbComponentProps> = ({\n  path = '',\n  onClick,\n  className = '',\n}) => {\n  const items = path.split(':');\n  const [activeIndex, setActiveIndex] = useState<number>(-1);\n\n  return (\n    <Breadcrumb\n      separator=\"\"\n      className={`${className} font-medium whitespace-nowrap`}\n    >\n      {items.map((item, index) => {\n        const current = items.slice(0, index + 1).join(':');\n        return (\n          <Breadcrumb.Item\n            key={current}\n            renderItem={() => (\n              <Arrow\n                onMouseEnter={() => setActiveIndex(index)}\n                onMouseLeave={() => setActiveIndex(-1)}\n                active={activeIndex >= index}\n                onClick={() => {\n                  if (onClick) {\n                    onClick({\n                      value: current,\n                      index,\n                    });\n                  }\n                }}\n              >\n                {item}\n              </Arrow>\n            )}\n          />\n        );\n      })}\n    </Breadcrumb>\n  );\n};\n\nexport default BreadcrumbComponent;\n","import { FC, useEffect, useState } from 'react';\nimport ReactJson from 'react-json-view';\nimport { Button, Icon, IconButton } from 'rsuite';\nimport {\n  saveItem,\n  setCurrentItem,\n  setFilter,\n  setItems,\n} from '~/store/actions.store';\nimport { TIPS_STORAGE_KEY, TIPS_URL } from '~/store/constants.store';\nimport { EItemType, TItem } from '~/store/interfaces.store';\nimport { useStore } from '~/store/provider.store';\nimport ConfirmDialog from './dialogs/confirm.dialog';\nimport BreadcrumbComponent from './dumb/breadcrumb.dumb';\n\nconst Code: FC = () => {\n  const [{ items, filter }, dispatch] = useStore();\n  const [showCode, setShowCode] = useState<boolean>(false);\n  const [showRefresh, setShowRefresh] = useState<boolean>(false);\n\n  useEffect(() => {\n    const cache = localStorage.getItem(TIPS_STORAGE_KEY);\n    let items: TItem[] = [];\n\n    if (cache) {\n      try {\n        items = JSON.parse(\n          localStorage.getItem(TIPS_STORAGE_KEY) || '[]',\n        ) as TItem[];\n      } catch (e) {\n        items = [];\n      }\n\n      dispatch(setItems(items));\n      return;\n    }\n\n    refresh();\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const refresh = () =>\n    fetch(TIPS_URL)\n      .then((res) => res.json() as Promise<TItem[]>)\n      .then((json) => dispatch(setItems(json)));\n\n  return (\n    <>\n      <ConfirmDialog\n        show={showRefresh}\n        yesProps={{ color: 'red' }}\n        onYes={(isYes) => {\n          if (isYes) {\n            refresh();\n          }\n\n          setShowRefresh(false);\n        }}\n      >\n        Reloading the view will fetch the items from:\n        <div className=\"flex justify-center my-5\">\n          <a\n            target=\"_blank\"\n            href={TIPS_URL}\n            className=\"bg-gray-500 text-xs p-1 rounded-md mx-1\"\n            rel=\"noreferrer\"\n          >\n            {TIPS_URL}\n          </a>\n        </div>\n        <span className=\"text-red-400 underline\">\n          All your changes will be lost. Do you want to proceed?\n        </span>\n      </ConfirmDialog>\n      <div className=\"w-full flex justify-between flex-row my-3\">\n        <div className=\"flex justify-center align-middle\">\n          <Button\n            className=\"mr-4\"\n            onClick={() => setShowRefresh(true)}\n          >\n            <Icon icon=\"refresh\"></Icon>\n          </Button>\n          <Button\n            className=\"mr-4\"\n            onClick={() => {\n              dispatch(\n                saveItem(\n                  {\n                    body: '',\n                    key: '',\n                    type: EItemType.TEXT,\n                  },\n                  items.length,\n                ),\n              );\n\n              dispatch(setCurrentItem(items.length));\n            }}\n          >\n            <Icon icon=\"plus\"></Icon>\n          </Button>\n          {filter ? (\n            <>\n              <BreadcrumbComponent\n                path={filter}\n                onClick={({ value }) => dispatch(setFilter(value))}\n              />\n              <Button\n                appearance=\"link\"\n                onClick={() => dispatch(setFilter(''))}\n              >\n                Clear\n              </Button>\n            </>\n          ) : null}\n        </div>\n        <div className=\"block\">\n          <IconButton\n            appearance={showCode ? 'primary' : 'default'}\n            onClick={() => setShowCode(!showCode)}\n            icon={<Icon icon=\"code\" />}\n          />\n        </div>\n      </div>\n      {showCode ? (\n        <ReactJson\n          style={{\n            padding: 10,\n            borderRadius: 6,\n            marginBottom: 12,\n            border: '1px dashed gray',\n          }}\n          src={items}\n          theme=\"solarized\"\n        />\n      ) : null}\n    </>\n  );\n};\n\nexport default Code;\n","import { FC, useEffect, useState } from 'react';\nimport {\n  Button,\n  ControlLabel,\n  Drawer,\n  Form,\n  FormGroup,\n  InputPicker,\n} from 'rsuite';\nimport { saveItem, setCurrentItem } from '~/store/actions.store';\nimport { useStore } from '~/store/provider.store';\n\nconst Detail: FC = () => {\n  const close = () => dispatch(setCurrentItem(-1));\n\n  const [{ current, items }, dispatch] = useStore();\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    fetch('keys.json')\n      .then((res) => res.json())\n      .then((data) => setData(data));\n  }, []);\n\n  if (current < 0) {\n    return null;\n  }\n\n  const setValue = (key: string, value: any) =>\n    dispatch(\n      saveItem(\n        {\n          ...items[current],\n          [key]: value,\n        },\n        current,\n      ),\n    );\n\n  return (\n    <Drawer show={current >= 0} onHide={close}>\n      <Drawer.Header>\n        <Drawer.Title>Item Detail</Drawer.Title>\n      </Drawer.Header>\n      <Drawer.Body>\n        <Form>\n          <FormGroup>\n            <ControlLabel>Key</ControlLabel>\n            <InputPicker\n              data={data}\n              groupBy=\"group\"\n              value={items[current].key}\n              onChange={(value) => setValue('key', value)}\n            ></InputPicker>\n          </FormGroup>\n        </Form>\n      </Drawer.Body>\n      <Drawer.Footer>\n        <Button onClick={close} appearance=\"primary\">\n          Save\n        </Button>\n        <Button onClick={close} appearance=\"subtle\">\n          Cancel\n        </Button>\n      </Drawer.Footer>\n    </Drawer>\n  );\n};\n\nexport default Detail;\n","import { FC, useState } from 'react';\nimport { Alert, Uploader } from 'rsuite';\nimport { FileType } from 'rsuite/lib/Uploader';\nimport { setItems } from '~/store/actions.store';\nimport { useStore } from '~/store/provider.store';\n\nconst styles = {\n  width: '100%',\n  height: '100%',\n};\n\nconst FileUpload: FC = () => {\n  const [file, setFile] = useState<FileType | null>(null);\n  const [, dispatch] = useStore();\n\n  return (\n    <Uploader\n      className=\"w-full mb-3\"\n      draggable\n      multiple={false}\n      fileList={file ? [file] : []}\n      autoUpload={false}\n      fileListVisible={false}\n      onChange={async (files) => {\n        if (files.length === 0) {\n          return;\n        }\n\n        const result = (await files[0].blobFile?.text()) || '[]';\n\n        try {\n          const json = JSON.parse(result);\n          dispatch(setItems(json));\n        } catch (e) {\n          Alert.error('Invalid JSON.');\n          return;\n        }\n\n        setFile(null);\n      }}\n      accept=\"application/json\"\n    >\n      <div style={styles}>Click or Drag files to this area</div>\n    </Uploader>\n  );\n};\n\nexport default FileUpload;\n","import { FC } from 'react';\nimport { IItem } from '~/store/interfaces.store';\nimport ConfirmDialog from './confirm.dialog';\n\nconst RemoveModal: FC<{\n  item?: IItem;\n  show: boolean;\n  onConfirm?: (isRemove: boolean) => void;\n}> = ({ show, onConfirm, item }) => {\n  if (!item) {\n    return null;\n  }\n\n  return (\n    <ConfirmDialog\n      show={show}\n      onYes={onConfirm}\n      yesLabel=\"Remove\"\n      noLabel=\"Cancel\"\n      yesProps={{ appearance: 'primary', color: 'red' }}\n    >\n      Are you sure you want to remove the key:\n      <span className=\"bg-gray-500 text-xs p-1 rounded-md mx-1\">\n        {item.key}\n      </span>{' '}\n      of type:\n      <span className=\"bg-gray-500 text-xs p-1 rounded-md mx-1\">\n        {item.type}\n      </span>\n      ?\n    </ConfirmDialog>\n  );\n};\n\nexport default RemoveModal;\n","import Markdown from 'markdown-to-jsx';\nimport { FC, useState } from 'react';\nimport {\n  Button,\n  FlexboxGrid,\n  Icon,\n  List,\n  Popover,\n  Whisper,\n} from 'rsuite';\nimport {\n  removeItem,\n  setCurrentItem,\n  setFilter,\n} from '~/store/actions.store';\nimport { EItemType, TItem } from '~/store/interfaces.store';\nimport { useStore } from '~/store/provider.store';\nimport BreadcrumbComponent from './dumb/breadcrumb.dumb';\nimport RemoveModal from './dialogs/confirm-remove.dialog';\n\nconst IconComponent: FC<{ item: TItem }> = ({ item }) => {\n  return (\n    <Whisper\n      preventOverflow\n      placement=\"auto\"\n      trigger=\"click\"\n      speaker={({ top, left, ...props }) => {\n        return (\n          <Popover\n            title={(item as any).title || ''}\n            style={{ top, left }}\n            {...props}\n          >\n            <article className=\"prose text-left prose-sm overflow-auto p-1 max-h-80 text-sm\">\n              {item.type === EItemType.VIDEO &&\n              item.video.provider === 'youtube' &&\n              item.video.link ? (\n                <iframe\n                  height={200}\n                  width={'100%'}\n                  src={item.video.link}\n                  title={item.title}\n                  allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                  allowFullScreen\n                ></iframe>\n              ) : null}\n              <Markdown\n                options={{\n                  overrides: {\n                    a: {\n                      component: ({ children, ...props }) => {\n                        return (\n                          <a\n                            {...props}\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                            className=\"flex items-center\"\n                          >\n                            {children}\n                            <Icon\n                              icon=\"external-link\"\n                              className=\"ml-1\"\n                            />\n                          </a>\n                        );\n                      },\n                    },\n                  },\n                }}\n              >\n                {item.body}\n              </Markdown>\n            </article>\n          </Popover>\n        );\n      }}\n    >\n      <Icon\n        icon={item.type === EItemType.VIDEO ? 'film' : 'code'}\n        className=\"text-gray-300 text-base cursor-pointer\"\n      />\n    </Whisper>\n  );\n};\n\nconst ItemsList: FC = () => {\n  const [{ items, filter }, dispatch] = useStore();\n  const [index, setIndex] = useState<number>(-1);\n\n  return (\n    <>\n      <RemoveModal\n        item={items[index]}\n        show={!!items[index]}\n        onConfirm={(isRemove) => {\n          if (isRemove) {\n            dispatch(removeItem(index));\n          }\n\n          setIndex(-1);\n        }}\n      ></RemoveModal>\n      {items.length === 0 ? (\n        <div className=\"text-center bg-[#292d33] border-dashed rounded-md border border-gray-200 p-3\">\n          The list is empty. Please upload a valid{' '}\n          <span className=\"bg-gray-500 p-1 text-xs rounded-md mx-1\">\n            JSON file\n          </span>{' '}\n          or use{' '}\n          <a href=\"tips.json\" target=\"_blank\">\n            this example\n          </a>\n        </div>\n      ) : null}\n      <List hover>\n        {items.map((item, index) => {\n          if (filter && !item.key.startsWith(filter)) {\n            return null;\n          }\n\n          return (\n            <List.Item key={`${item.key}:${index}`} index={index}>\n              <FlexboxGrid>\n                {/*icon*/}\n                <FlexboxGrid.Item\n                  colspan={2}\n                  className=\"flex justify-center items-center h-16\"\n                >\n                  <IconComponent item={item} />\n                </FlexboxGrid.Item>\n                {/*base info*/}\n                <FlexboxGrid.Item\n                  colspan={19}\n                  className=\"flex flex-col justify-center items-start h-16\"\n                >\n                  <BreadcrumbComponent\n                    path={item.key}\n                    onClick={({ value }) =>\n                      dispatch(setFilter(value))\n                    }\n                  />\n                </FlexboxGrid.Item>\n                <FlexboxGrid.Item\n                  colspan={2}\n                  className=\"flex justify-center items-center h-16\"\n                >\n                  <Button\n                    color=\"orange\"\n                    appearance=\"link\"\n                    onClick={() => setIndex(index)}\n                  >\n                    Remove\n                  </Button>\n                  <span className=\"p-1\">|</span>\n                  <Button\n                    appearance=\"link\"\n                    onClick={() => dispatch(setCurrentItem(index))}\n                  >\n                    Edit\n                  </Button>\n                </FlexboxGrid.Item>\n              </FlexboxGrid>\n            </List.Item>\n          );\n        })}\n      </List>\n    </>\n  );\n};\n\nexport default ItemsList;\n","import { FC } from 'react';\nimport Code from '~/components/code.component';\nimport Detail from '~/components/detail.component';\nimport FileUpload from '~/components/file-upload.component';\nimport List from '~/components/list.component';\nimport { StoreProvider } from '~/store/provider.store';\n\nconst App: FC = () => {\n  return (\n    <StoreProvider>\n      <div className=\"max-w-7xl m-auto mt-4\">\n        <FileUpload></FileUpload>\n        <Code></Code>\n        <List></List>\n        <Detail></Detail>\n      </div>\n    </StoreProvider>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}