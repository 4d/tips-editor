{"version":3,"sources":["store/interfaces.store.ts","store/actions.store.ts","store/constants.store.ts","store/reducer.store.ts","store/provider.store.tsx","components/dialogs/confirm.dialog.tsx","components/dumb/breadcrumb.dumb.tsx","components/code.component.tsx","components/detail.component.tsx","components/file-upload.component.tsx","components/dialogs/confirm-remove.dialog.tsx","components/list.component.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["EItemType","EActionType","setItems","payload","type","SET_ITEMS","saveItem","item","index","SAVE_ITEM","setCurrentItem","SET_CURRENT_ITEM","setFilter","SET_FILTER","TIPS_STORAGE_KEY","TIPS_URL","initialState","filter","items","current","keys","appReducer","state","action","SET_KEYS","sortBy","REMOVE_ITEM","remove","length","map","i","Store","createContext","displayName","useStore","useContext","StoreProvider","children","useReducer","globalState","dispatch","useEffect","localStorage","setItem","JSON","stringify","fetch","then","res","json","setKeys","Provider","value","ConfirmDialog","show","onYes","title","yesLabel","noLabel","yesProps","noProps","onHide","isYes","Modal","Header","Title","Body","Footer","Button","appearance","onClick","Arrow","active","props","className","BreadcrumbComponent","path","style","split","useState","activeIndex","setActiveIndex","Breadcrumb","separator","slice","join","Item","renderItem","onMouseEnter","onMouseLeave","Code","showCode","setShowCode","showRefresh","setShowRefresh","isFetching","setIsFetching","getItem","parse","e","refresh","finally","color","target","href","rel","Icon","icon","spin","body","key","TEXT","IconButton","padding","borderRadius","marginBottom","border","src","theme","Detail","close","Drawer","Form","FormGroup","ControlLabel","InputPicker","data","groupBy","onChange","setValue","styles","width","height","FileUpload","file","setFile","Uploader","draggable","multiple","fileList","autoUpload","fileListVisible","files","a","blobFile","text","result","Alert","error","accept","RemoveModal","onConfirm","IconComponent","Whisper","preventOverflow","placement","trigger","speaker","top","left","Popover","VIDEO","video","provider","link","allow","allowFullScreen","options","overrides","component","ItemsList","setIndex","keysString","useMemo","isRemove","removeItem","List","hover","startsWith","keyExists","includes","FlexboxGrid","colspan","Tooltip","marginLeft","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1a12a4c9.chunk.js","sourcesContent":["export enum EItemType {\n  TEXT = 'text',\n  VIDEO = 'video',\n}\n\nexport interface IItem {\n  key: string;\n  body: string;\n  type: EItemType;\n}\n\nexport interface IVideoItem extends IItem {\n  type: EItemType.VIDEO;\n  video: {\n    provider: string;\n    link: string;\n  };\n  title: string;\n}\n\nexport interface ITextItem extends IItem {\n  type: EItemType.TEXT;\n}\n\nexport type TItem = IVideoItem | ITextItem;\n\nexport interface IKeyItem {\n  label: string;\n  group: string;\n  value: string;\n}\n\nexport interface IAppState {\n  items: TItem[];\n  current: number;\n  filter: string;\n  keys: IKeyItem[];\n}\n\nexport enum EActionType {\n  SET_CURRENT_ITEM = 'Edit item',\n  REMOVE_ITEM = 'Remove item',\n  SAVE_ITEM = 'SAVE item',\n  SET_KEYS = 'Set Keys',\n  SET_ITEMS = 'Set Items',\n  SET_FILTER = 'Set filter',\n}\n\nexport interface TSetCurrentItemAction {\n  type: EActionType.SET_CURRENT_ITEM;\n  payload: number;\n}\n\nexport interface TSetKeysAction {\n  type: EActionType.SET_KEYS;\n  payload: IKeyItem[];\n}\n\nexport interface TRemoveItemAction {\n  type: EActionType.REMOVE_ITEM;\n  payload: number;\n}\n\nexport interface TSaveItemAction {\n  type: EActionType.SAVE_ITEM;\n  payload: {\n    item: TItem;\n    index: number;\n  };\n}\n\nexport interface TSetItemsAction {\n  type: EActionType.SET_ITEMS;\n  payload: TItem[];\n}\n\nexport interface TSetFilterAction {\n  type: EActionType.SET_FILTER;\n  payload: string;\n}\n\nexport type TAction =\n  | TSetCurrentItemAction\n  | TSetKeysAction\n  | TRemoveItemAction\n  | TSaveItemAction\n  | TSetFilterAction\n  | TSetItemsAction;\n","import {\n  EActionType,\n  IKeyItem,\n  TItem,\n  TRemoveItemAction,\n  TSaveItemAction,\n  TSetCurrentItemAction,\n  TSetFilterAction,\n  TSetItemsAction,\n  TSetKeysAction,\n} from './interfaces.store';\n\nexport function setItems(payload: TItem[]): TSetItemsAction {\n  return {\n    type: EActionType.SET_ITEMS,\n    payload,\n  };\n}\n\nexport function removeItem(index: number): TRemoveItemAction {\n  return {\n    type: EActionType.REMOVE_ITEM,\n    payload: index,\n  };\n}\n\nexport function saveItem(\n  item: TItem,\n  index: number,\n): TSaveItemAction {\n  return {\n    type: EActionType.SAVE_ITEM,\n    payload: { item, index },\n  };\n}\n\nexport function setKeys(keys: IKeyItem[]): TSetKeysAction {\n  return {\n    type: EActionType.SET_KEYS,\n    payload: keys,\n  };\n}\n\nexport function setCurrentItem(\n  payload: number,\n): TSetCurrentItemAction {\n  return {\n    type: EActionType.SET_CURRENT_ITEM,\n    payload,\n  };\n}\n\nexport function setFilter(payload: string): TSetFilterAction {\n  return {\n    type: EActionType.SET_FILTER,\n    payload,\n  };\n}\n","import { IAppState } from './interfaces.store';\n\nexport const TIPS_STORAGE_KEY = '__TIPS__';\nexport const TIPS_URL =\n  'https://raw.githubusercontent.com/midrissi/Web-studio-TIPS/main/tips.json';\n\nexport const initialState: IAppState = {\n  filter: '',\n  items: [],\n  current: -1,\n  keys: [],\n};\n","import { remove, sortBy } from 'lodash';\nimport { Reducer } from 'react';\nimport { initialState } from './constants.store';\nimport { EActionType, IAppState, TAction } from './interfaces.store';\n\nexport const appReducer: Reducer<IAppState, TAction> = (\n  state: IAppState = initialState,\n  action: TAction,\n): IAppState => {\n  switch (action.type) {\n    case EActionType.SET_KEYS:\n      return {\n        ...state,\n        keys: action.payload,\n      };\n    case EActionType.SET_FILTER:\n      return {\n        ...state,\n        filter: action.payload,\n      };\n    case EActionType.SET_ITEMS:\n      return {\n        ...state,\n        items: sortBy(action.payload, 'key'),\n      };\n    case EActionType.REMOVE_ITEM:\n      return {\n        ...state,\n        items: remove(\n          state.items,\n          (item, index) => index !== action.payload,\n        ),\n      };\n    case EActionType.SAVE_ITEM: {\n      const { index, item } = action.payload;\n\n      if (index >= state.items.length) {\n        return {\n          ...state,\n          items: [...state.items, item],\n        };\n      }\n\n      return {\n        ...state,\n        items: state.items.map((current, i) =>\n          index === i ? item : current,\n        ),\n      };\n    }\n    case EActionType.SET_CURRENT_ITEM:\n      return {\n        ...state,\n        current: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","import {\n  createContext,\n  useContext,\n  useReducer,\n  FC,\n  Dispatch,\n  useEffect,\n} from 'react';\nimport { setKeys } from './actions.store';\nimport { initialState, TIPS_STORAGE_KEY } from './constants.store';\nimport { IAppState, IKeyItem, TAction } from './interfaces.store';\nimport { appReducer } from './reducer.store';\n\nconst Store = createContext<[IAppState, Dispatch<TAction>]>([\n  initialState,\n  () => {},\n]);\n\nStore.displayName = 'Store';\n\nexport const useStore = () => useContext(Store);\n\nexport const StoreProvider: FC = ({ children }) => {\n  const [globalState, dispatch] = useReducer(\n    appReducer,\n    initialState,\n  );\n\n  useEffect(() => {\n    localStorage.setItem(\n      TIPS_STORAGE_KEY,\n      JSON.stringify(globalState.items),\n    );\n  }, [globalState.items]);\n\n  useEffect(() => {\n    fetch('keys.json')\n      .then((res) => res.json() as Promise<IKeyItem[]>)\n      .then((keys) => dispatch(setKeys(keys)));\n  }, []);\n\n  return (\n    <Store.Provider value={[globalState, dispatch]}>\n      {children}\n    </Store.Provider>\n  );\n};\n","import { FC } from 'react';\nimport { Button, ButtonProps, Modal } from 'rsuite';\n\nconst ConfirmDialog: FC<\n  Partial<{\n    show: boolean;\n    title: string;\n    yesLabel: string;\n    noLabel: string;\n    yesProps: ButtonProps;\n    noProps: ButtonProps;\n    onYes: (isYes: boolean) => void;\n  }>\n> = ({\n  show,\n  onYes,\n  title = 'Confirm',\n  children,\n  yesLabel = 'Yes',\n  noLabel = 'No',\n  yesProps = {},\n  noProps = {},\n}) => {\n  function onHide(isYes: boolean) {\n    if (onYes) {\n      onYes(isYes);\n    }\n  }\n\n  return (\n    <Modal show={show} onHide={() => onHide(false)}>\n      <Modal.Header>\n        <Modal.Title>{title}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>{children}</Modal.Body>\n      <Modal.Footer>\n        <Button\n          appearance=\"primary\"\n          {...yesProps}\n          onClick={() => onHide(true)}\n        >\n          {yesLabel}\n        </Button>\n        <Button\n          appearance=\"subtle\"\n          {...noProps}\n          onClick={() => onHide(false)}\n        >\n          {noLabel}\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default ConfirmDialog;\n","import { CSSProperties, FC, useState } from 'react';\nimport { Breadcrumb } from 'rsuite';\nimport './breadcrumb.style.css';\n\ninterface ArrowProps\n  extends React.DetailedHTMLProps<\n    React.HTMLAttributes<HTMLDivElement>,\n    HTMLDivElement\n  > {\n  active: boolean;\n}\n\nconst Arrow: FC<ArrowProps> = ({ children, active, ...props }) => {\n  return (\n    <div className={`rs-item ${active ? 'active' : ''}`} {...props}>\n      {children}\n    </div>\n  );\n};\n\ninterface BreadcrumbComponentProps {\n  path: string;\n  style?: CSSProperties;\n  className?: string;\n  onClick?: (ev: { value: string; index: number }) => void;\n}\n\nconst BreadcrumbComponent: FC<BreadcrumbComponentProps> = ({\n  path = '',\n  onClick,\n  className = '',\n  style = {},\n}) => {\n  const items = path.split(':');\n  const [activeIndex, setActiveIndex] = useState<number>(-1);\n\n  return (\n    <Breadcrumb\n      separator=\"\"\n      style={style}\n      className={`${className} font-medium whitespace-nowrap`}\n    >\n      {items.map((item, index) => {\n        const current = items.slice(0, index + 1).join(':');\n        return (\n          <Breadcrumb.Item\n            key={current}\n            renderItem={() => (\n              <Arrow\n                onMouseEnter={() => setActiveIndex(index)}\n                onMouseLeave={() => setActiveIndex(-1)}\n                active={activeIndex >= index}\n                onClick={() => {\n                  if (onClick) {\n                    onClick({\n                      value: current,\n                      index,\n                    });\n                  }\n                }}\n              >\n                {item}\n              </Arrow>\n            )}\n          />\n        );\n      })}\n    </Breadcrumb>\n  );\n};\n\nexport default BreadcrumbComponent;\n","import { FC, useEffect, useState } from 'react';\nimport ReactJson from 'react-json-view';\nimport { Button, Icon, IconButton } from 'rsuite';\nimport {\n  saveItem,\n  setCurrentItem,\n  setFilter,\n  setItems,\n} from '~/store/actions.store';\nimport { TIPS_STORAGE_KEY, TIPS_URL } from '~/store/constants.store';\nimport { EItemType, TItem } from '~/store/interfaces.store';\nimport { useStore } from '~/store/provider.store';\nimport ConfirmDialog from './dialogs/confirm.dialog';\nimport BreadcrumbComponent from './dumb/breadcrumb.dumb';\n\nconst Code: FC = () => {\n  const [{ items, filter }, dispatch] = useStore();\n  const [showCode, setShowCode] = useState<boolean>(false);\n  const [showRefresh, setShowRefresh] = useState<boolean>(false);\n  const [isFetching, setIsFetching] = useState<boolean>(false);\n\n  useEffect(() => {\n    const cache = localStorage.getItem(TIPS_STORAGE_KEY);\n    let items: TItem[] = [];\n\n    if (cache) {\n      try {\n        items = JSON.parse(\n          localStorage.getItem(TIPS_STORAGE_KEY) || '[]',\n        ) as TItem[];\n      } catch (e) {\n        items = [];\n      }\n\n      dispatch(setItems(items));\n      return;\n    }\n\n    refresh();\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const refresh = () => {\n    setIsFetching(true);\n    fetch(TIPS_URL)\n      .then((res) => res.json() as Promise<TItem[]>)\n      .then((json) => dispatch(setItems(json)))\n      .finally(() => setIsFetching(false));\n  };\n\n  return (\n    <>\n      <ConfirmDialog\n        show={showRefresh}\n        yesProps={{ color: 'red' }}\n        onYes={(isYes) => {\n          if (isYes) {\n            refresh();\n          }\n\n          setShowRefresh(false);\n        }}\n      >\n        Reloading the view will fetch the items from:\n        <div className=\"flex justify-center my-5\">\n          <a\n            target=\"_blank\"\n            href={TIPS_URL}\n            className=\"bg-gray-500 text-xs p-1 rounded-md mx-1\"\n            rel=\"noreferrer\"\n          >\n            {TIPS_URL}\n          </a>\n        </div>\n        <span className=\"text-red-400 underline\">\n          All your changes will be lost. Do you want to proceed?\n        </span>\n      </ConfirmDialog>\n      <div className=\"w-full flex justify-between flex-row my-3\">\n        <div className=\"flex justify-center align-middle\">\n          <Button\n            className=\"mr-4\"\n            onClick={() => setShowRefresh(true)}\n          >\n            <Icon icon=\"refresh\" spin={isFetching}></Icon>\n          </Button>\n          <Button\n            className=\"mr-4\"\n            onClick={() => {\n              dispatch(\n                saveItem(\n                  {\n                    body: '',\n                    key: '',\n                    type: EItemType.TEXT,\n                  },\n                  items.length,\n                ),\n              );\n\n              dispatch(setCurrentItem(items.length));\n            }}\n          >\n            <Icon icon=\"plus\"></Icon>\n          </Button>\n          {filter ? (\n            <>\n              <BreadcrumbComponent\n                path={filter}\n                onClick={({ value }) => dispatch(setFilter(value))}\n              />\n              <Button\n                appearance=\"link\"\n                onClick={() => dispatch(setFilter(''))}\n              >\n                Clear\n              </Button>\n            </>\n          ) : null}\n        </div>\n        <div className=\"block\">\n          <IconButton\n            appearance={showCode ? 'primary' : 'default'}\n            onClick={() => setShowCode(!showCode)}\n            icon={<Icon icon=\"code\" />}\n          />\n        </div>\n      </div>\n      {showCode ? (\n        <ReactJson\n          style={{\n            padding: 10,\n            borderRadius: 6,\n            marginBottom: 12,\n            border: '1px dashed gray',\n          }}\n          src={items}\n          theme=\"solarized\"\n        />\n      ) : null}\n    </>\n  );\n};\n\nexport default Code;\n","import { FC } from 'react';\nimport {\n  Button,\n  ControlLabel,\n  Drawer,\n  Form,\n  FormGroup,\n  InputPicker,\n} from 'rsuite';\nimport { saveItem, setCurrentItem } from '~/store/actions.store';\nimport { useStore } from '~/store/provider.store';\n\nconst Detail: FC = () => {\n  const close = () => dispatch(setCurrentItem(-1));\n\n  const [{ current, items, keys }, dispatch] = useStore();\n\n  if (current < 0) {\n    return null;\n  }\n\n  const setValue = (key: string, value: any) =>\n    dispatch(\n      saveItem(\n        {\n          ...items[current],\n          [key]: value,\n        },\n        current,\n      ),\n    );\n\n  return (\n    <Drawer show={current >= 0} onHide={close}>\n      <Drawer.Header>\n        <Drawer.Title>Item Detail</Drawer.Title>\n      </Drawer.Header>\n      <Drawer.Body>\n        <Form>\n          <FormGroup>\n            <ControlLabel>Key</ControlLabel>\n            <InputPicker\n              data={keys}\n              groupBy=\"group\"\n              value={items[current].key}\n              onChange={(value) => setValue('key', value)}\n            ></InputPicker>\n          </FormGroup>\n        </Form>\n      </Drawer.Body>\n      <Drawer.Footer>\n        <Button onClick={close} appearance=\"primary\">\n          Save\n        </Button>\n        <Button onClick={close} appearance=\"subtle\">\n          Cancel\n        </Button>\n      </Drawer.Footer>\n    </Drawer>\n  );\n};\n\nexport default Detail;\n","import { FC, useState } from 'react';\nimport { Alert, Uploader } from 'rsuite';\nimport { FileType } from 'rsuite/lib/Uploader';\nimport { setItems } from '~/store/actions.store';\nimport { useStore } from '~/store/provider.store';\n\nconst styles = {\n  width: '100%',\n  height: '100%',\n};\n\nconst FileUpload: FC = () => {\n  const [file, setFile] = useState<FileType | null>(null);\n  const [, dispatch] = useStore();\n\n  return (\n    <Uploader\n      className=\"w-full mb-3\"\n      draggable\n      multiple={false}\n      fileList={file ? [file] : []}\n      autoUpload={false}\n      fileListVisible={false}\n      onChange={async (files) => {\n        if (files.length === 0) {\n          return;\n        }\n\n        const result = (await files[0].blobFile?.text()) || '[]';\n\n        try {\n          const json = JSON.parse(result);\n          dispatch(setItems(json));\n        } catch (e) {\n          Alert.error('Invalid JSON.');\n          return;\n        }\n\n        setFile(null);\n      }}\n      accept=\"application/json\"\n    >\n      <div style={styles}>Click or Drag files to this area</div>\n    </Uploader>\n  );\n};\n\nexport default FileUpload;\n","import { FC } from 'react';\nimport { IItem } from '~/store/interfaces.store';\nimport ConfirmDialog from './confirm.dialog';\n\nconst RemoveModal: FC<{\n  item?: IItem;\n  show: boolean;\n  onConfirm?: (isRemove: boolean) => void;\n}> = ({ show, onConfirm, item }) => {\n  if (!item) {\n    return null;\n  }\n\n  return (\n    <ConfirmDialog\n      show={show}\n      onYes={onConfirm}\n      yesLabel=\"Remove\"\n      noLabel=\"Cancel\"\n      yesProps={{ appearance: 'primary', color: 'red' }}\n    >\n      Are you sure you want to remove the key:\n      <span className=\"bg-gray-500 text-xs p-1 rounded-md mx-1\">\n        {item.key}\n      </span>{' '}\n      of type:\n      <span className=\"bg-gray-500 text-xs p-1 rounded-md mx-1\">\n        {item.type}\n      </span>\n      ?\n    </ConfirmDialog>\n  );\n};\n\nexport default RemoveModal;\n","import Markdown from 'markdown-to-jsx';\nimport { FC, useMemo, useState } from 'react';\nimport {\n  Button,\n  FlexboxGrid,\n  Icon,\n  List,\n  Popover,\n  Tooltip,\n  Whisper,\n} from 'rsuite';\nimport {\n  removeItem,\n  setCurrentItem,\n  setFilter,\n} from '~/store/actions.store';\nimport { EItemType, TItem } from '~/store/interfaces.store';\nimport { useStore } from '~/store/provider.store';\nimport BreadcrumbComponent from './dumb/breadcrumb.dumb';\nimport RemoveModal from './dialogs/confirm-remove.dialog';\n\nconst IconComponent: FC<{ item: TItem }> = ({ item }) => {\n  return (\n    <Whisper\n      preventOverflow\n      placement=\"auto\"\n      trigger=\"click\"\n      speaker={({ top, left, ...props }) => {\n        return (\n          <Popover\n            title={(item as any).title || ''}\n            style={{ top, left }}\n            {...props}\n          >\n            <article className=\"prose text-left prose-sm overflow-auto p-1 max-h-80 text-sm\">\n              {item.type === EItemType.VIDEO &&\n              item.video.provider === 'youtube' &&\n              item.video.link ? (\n                <iframe\n                  height={200}\n                  width={'100%'}\n                  src={item.video.link}\n                  title={item.title}\n                  allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                  allowFullScreen\n                ></iframe>\n              ) : null}\n              <Markdown\n                options={{\n                  overrides: {\n                    a: {\n                      component: ({ children, ...props }) => {\n                        return (\n                          <a\n                            {...props}\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                            className=\"flex items-center\"\n                          >\n                            {children}\n                            <Icon\n                              icon=\"external-link\"\n                              className=\"ml-1\"\n                            />\n                          </a>\n                        );\n                      },\n                    },\n                  },\n                }}\n              >\n                {item.body}\n              </Markdown>\n            </article>\n          </Popover>\n        );\n      }}\n    >\n      <Icon\n        icon={item.type === EItemType.VIDEO ? 'film' : 'code'}\n        className=\"text-gray-300 text-base cursor-pointer\"\n      />\n    </Whisper>\n  );\n};\n\nconst ItemsList: FC = () => {\n  const [{ items, filter, keys }, dispatch] = useStore();\n  const [index, setIndex] = useState<number>(-1);\n\n  const keysString = useMemo<string[]>(() => {\n    return keys.map(({ value }) => value);\n  }, [keys]);\n\n  return (\n    <>\n      <RemoveModal\n        item={items[index]}\n        show={!!items[index]}\n        onConfirm={(isRemove) => {\n          if (isRemove) {\n            dispatch(removeItem(index));\n          }\n\n          setIndex(-1);\n        }}\n      ></RemoveModal>\n      {items.length === 0 ? (\n        <div className=\"text-center bg-[#292d33] border-dashed rounded-md border border-gray-200 p-3\">\n          The list is empty. Please upload a valid{' '}\n          <span className=\"bg-gray-500 p-1 text-xs rounded-md mx-1\">\n            JSON file\n          </span>{' '}\n          or use{' '}\n          <a href=\"tips.json\" target=\"_blank\">\n            this example\n          </a>\n        </div>\n      ) : null}\n      <List hover>\n        {items.map((item, index) => {\n          if (filter && !item.key.startsWith(filter)) {\n            return null;\n          }\n\n          const keyExists = keysString.includes(item.key);\n\n          return (\n            <List.Item key={`${item.key}:${index}`} index={index}>\n              <FlexboxGrid>\n                {/*icon*/}\n                <FlexboxGrid.Item\n                  colspan={2}\n                  className=\"flex justify-center items-center h-16\"\n                >\n                  <IconComponent item={item} />\n                </FlexboxGrid.Item>\n                {/*base info*/}\n                <FlexboxGrid.Item\n                  colspan={19}\n                  className=\"flex flex-row h-16\"\n                >\n                  {!keyExists && (\n                    <Whisper\n                      trigger=\"hover\"\n                      placement=\"left\"\n                      speaker={\n                        <Tooltip>\n                          <div className=\"p-2\">Key not supported</div>\n                        </Tooltip>\n                      }\n                    >\n                      <Icon\n                        icon=\"info\"\n                        className=\"flex items-center mr-2 text-red-400 cursor-pointer\"\n                      />\n                    </Whisper>\n                  )}\n                  <BreadcrumbComponent\n                    style={{\n                      marginLeft: keyExists ? 22 : 'unset',\n                    }}\n                    path={item.key}\n                    onClick={({ value }) =>\n                      dispatch(setFilter(value))\n                    }\n                  />\n                </FlexboxGrid.Item>\n                <FlexboxGrid.Item\n                  colspan={2}\n                  className=\"flex justify-center items-center h-16\"\n                >\n                  <Button\n                    color=\"orange\"\n                    appearance=\"link\"\n                    onClick={() => setIndex(index)}\n                  >\n                    Remove\n                  </Button>\n                  <span className=\"p-1\">|</span>\n                  <Button\n                    appearance=\"link\"\n                    onClick={() => dispatch(setCurrentItem(index))}\n                  >\n                    Edit\n                  </Button>\n                </FlexboxGrid.Item>\n              </FlexboxGrid>\n            </List.Item>\n          );\n        })}\n      </List>\n    </>\n  );\n};\n\nexport default ItemsList;\n","import { FC } from 'react';\nimport Code from '~/components/code.component';\nimport Detail from '~/components/detail.component';\nimport FileUpload from '~/components/file-upload.component';\nimport List from '~/components/list.component';\nimport { StoreProvider } from '~/store/provider.store';\n\nconst App: FC = () => {\n  return (\n    <StoreProvider>\n      <div className=\"max-w-7xl m-auto mt-4\">\n        <FileUpload></FileUpload>\n        <Code></Code>\n        <List></List>\n        <Detail></Detail>\n      </div>\n    </StoreProvider>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}